name: Backend build

on:
  push:
    tags:
      - 'backend-v*.*.*' # Trigger on tags like backend-v0.1.0
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/stancld/strava-zones-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Add this step to set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract package version from pyproject.toml
        id: package_version
        run: |
          VERSION=$(grep -E '^version\s*=\s*".*"' backend/pyproject.toml | sed -E 's/version\s*=\s*"(.*)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted pyproject.toml version: $VERSION"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # Extract 'vX.Y.Z' from Git tag 'backend-vX.Y.Z' and use it as a Docker tag
            type=ref,event=tag,pattern=^backend-(v.*)
            # Tag 'latest' if the pushed Git tag is a stable release (e.g., backend-vX.Y.Z without -alpha, -rc)
            type=raw,value=latest,enable=${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/backend-v') && !contains(github.ref, '-') }}
            # Tag with the Git SHA for traceability, prefixed with 'sha-'
            type=sha,prefix=sha-
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ steps.package_version.outputs.version }} # Label with pyproject version
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
